(function(){"use strict";var e={9297:function(e,s,a){var t=a(3751),n=a(810),r=a(641);function i(e,s,a,t,n,i){const o=(0,r.g2)("MissionsGenerator");return(0,r.uX)(),(0,r.Wv)(o)}var o=a(33);const l={key:0},m={key:1},c={key:2};function u(e,s,a,n,i,u){const p=(0,r.g2)("MechClassSelect"),h=(0,r.g2)("MissionSingle"),f=(0,r.g2)("OverviewMechs"),v=(0,r.g2)("OverviewMissions");return(0,r.uX)(),(0,r.CE)(r.FK,null,[s[4]||(s[4]=(0,r.Lk)("h1",null,"Missions Generator v0.7 (2025-06-28)",-1)),(0,r.Lk)("div",null,[(0,r.Lk)("button",{onClick:s[0]||(s[0]=e=>i.showPageNumber=1)},"Show Generator"),(0,r.Lk)("button",{onClick:s[1]||(s[1]=e=>i.showPageNumber=2)},"Show Mech Overview"),(0,r.Lk)("button",{onClick:s[2]||(s[2]=e=>i.showPageNumber=3)},"Show Mission Overview")]),1==i.showPageNumber?((0,r.uX)(),(0,r.CE)("span",l,[(0,r.Lk)("form",{onSubmit:s[3]||(s[3]=(0,t.D$)(((...e)=>u.generateMissions&&u.generateMissions(...e)),["prevent"]))},[(0,r.bF)(p,{onEmitSelectedMissionClass:u.onSelectMissionClass},null,8,["onEmitSelectedMissionClass"])],32),i.missionCount>0?((0,r.uX)(),(0,r.CE)("span",{key:i.componentKeyForReRendering},[(0,r.Lk)("p",null,"Missions: "+(0,o.v_)(i.missionCount),1),((0,r.uX)(!0),(0,r.CE)(r.FK,null,(0,r.pI)(parseInt(i.missionCount),(e=>((0,r.uX)(),(0,r.CE)("p",{key:e},[(0,r.bF)(h,{missionNumber:e,highestPossibleMechClass:i.selectedMissionClass},null,8,["missionNumber","highestPossibleMechClass"])])))),128))])):(0,r.Q3)("",!0)])):(0,r.Q3)("",!0),2==i.showPageNumber?((0,r.uX)(),(0,r.CE)("span",m,[(0,r.bF)(f)])):(0,r.Q3)("",!0),3==i.showPageNumber?((0,r.uX)(),(0,r.CE)("span",c,[(0,r.bF)(v)])):(0,r.Q3)("",!0)],64)}function p(e){return Math.floor(Math.random()*parseInt(e,10))+1}function h(e,s){return Math.floor(Math.random()*(s-e+1))+e}a(8111),a(1701);var f=a(953),v={map:[{mapName:"Grassland #1"},{mapName:"Grassland #2"},{mapName:"Grassland #3"},{mapName:"Desert #1"},{mapName:"Desert #2"},{mapName:"Desert #3"},{mapName:"Rolling Hills #2 (Grassland/Hills)"},{mapName:"Hill Tops #1 (Grassland/Hills)"},{mapName:"Barren Lands #1 (Desert/Hills)"},{mapName:"Barren Lands #2 (Desert/Hills)"},{mapName:"Racice Riverdelta (CJW)"},{mapName:"Pozorista Mountains (CW)"},{mapName:"Kozice Valley (CDS)"},{mapName:"Lake Losiije (CNC) (Desert/Lake)"},{mapName:"Holth Forest (CGB) (Forest/Fire)"},{mapName:"Devils Bath (CSV) (Geyser/Vulkane)"},{mapName:"Robyns Crossing (FlussÃ¼bergang)"},{mapName:"Deployment Zone (Desert)"}]},b={mapParameter:[{parameterName:"Nothing happens",parameterDifficulty:0},{parameterName:"Solarstorms - every start of round, 1W6, 5+6 no firing possible",parameterDifficulty:5},{parameterName:"Bombardment - every round, if mech did not move, add one damage",parameterDifficulty:5},{parameterName:"Hot planet - after firing mechs cannot fire the next round.",parameterDifficulty:5},{parameterName:"High gravity - every mech movement - 1",parameterDifficulty:5},{parameterName:"Very high gravity - every mech movement - 2",parameterDifficulty:5},{parameterName:"Pirate sector - every round a pirate can appear 1W6 -> 6 Pirate spawns",parameterDifficulty:5},{parameterName:"Sandstorm - add one to needed hit value",parameterDifficulty:5},{parameterName:"Scanners - Every round a blip can activate itself 1W6 -> 6 blip activates",parameterDifficulty:5}]};a(7588);const M=["innerHTML"],d={name:"GridStart"};var C=Object.assign(d,{props:["positionNumber"],setup(e){const s=e;let a=[[3,6,9],[2,5,8],[1,4,7]];function t(e){const s=document.createElement("table");return s.classList.add("positionGraphTable"),a.forEach((a=>{let t=s.insertRow();a.forEach((s=>{let a=t.insertCell(),n="";n=s==e?"X":"O";let r=document.createTextNode(n);a.appendChild(r)}))})),s}const n=(0,r.EW)((()=>t(s.positionNumber)));return(e,s)=>((0,r.uX)(),(0,r.CE)("p",{innerHTML:n.value.outerHTML},null,8,M))}});const N=C;var O=N;let g={};const y=(0,n.nY)("difficulty",{state:()=>({difficultyInStore:g}),actions:{add(e,s){this.difficultyInStore[e]=s},get(e){return this.difficultyInStore[e]}}});var S={RevealAllBlips:{description:"Reveal all Blips"},RevealAtLeastOneBlips:{description:"Reveal at least one Blip"},DestroyAllEnemies:{description:"Destroy all enemies"},DestroyObjects:{description:"Destroy all objects"},RetreatToShip:{description:"Retreat to ship"},DestroyTargetMech:{description:"Destroy target mech"},DefendObjects:{description:"Defend objects"},DefendEscort:{description:"Defend escort"},ReachCorner:{description:"All mechs must reach opposite corner"},CaptureAllObjects:{description:"Capture all objects"}},k={DiceOutBlips:{description:"Dice out Blips"},PlaceBlipsOnMap:{description:"Place Blips on map"},PlacePlayerStart:{description:"Place Player start on map"},DiceOutEscortStartingPosition:{description:"Dice out escort starting position"},DiceOutObjectNumber:{description:"Dice out number of objects"},PlaceObjectsOnMap:{description:"Place objects on map"}},P={MaxBlips:{description:"Max Blips on Map"},MinBlips:{description:"Min Blips on Map"},MaxMechsOnBlip:{description:"Max Mechs on Blip"},MinMechsOnBlip:{description:"Max Mechs on Blip"},MaxObjectsOnMap:{description:"Max Objects on Map"},MinObjectsOnMap:{description:"Min Objects on Map"},MaxEscortsOnMap:{description:"Max Escort on Map"},MinEscortsOnMap:{description:"Min Escort on Map"},DamagePerShotOnObject:{description:"Max Damage per shot on object"},DamagePerShotOnEscort:{description:"Max Damage per shot on escort"},NumberOfObjectsToSurvive:{description:"Number of objects need to survive"},NumberOfRoundsToSurvive:{description:"Survive number of rounds"},RangeToCapture:{description:"Range to capture"},RoundsInRangeToCapture:{description:"Rounds in range to capture"},ChanceOfSpawningEnemyMech:{description:"Every round an enemy mech can spawn at a random position"},NumberOfTargetMechs:{description:"How many target mechs are present"},ChanceOfActivatingBlipEveryRound:{description:"Every round each blip has a chance to activate"}},E={NoConstraints:{description:"No constraints for this mission"},EnemyMechsTargetEscortFirst:{description:"All enemy mechs target escort first"},EnemyMechsAreAlwaysAggressive:{description:"Enemy mechs are always aggressive"},PirateCanSpawn:{description:"Every round (1:6) a pirate from current mech pool can spawn"},PlayerMustSpawnInCorner:{description:"Player start must be in a corner"},EnemyMechsTargetObjectsFirst:{description:"Enemy mechs always target objects first"},PossibleMechClassesIncreased:{description:"Mechs from one tier above can spawn"},ObjectsAreVisibleFromStart:{description:"All objects are visible without activating blips"}},D={Terminate:{longName:"Terminate",missionDescription:"Destroy all enemies",missionSetupSteps:{1:k.DiceOutBlips,2:k.PlaceBlipsOnMap,3:k.PlacePlayerStart},missionGoals:{1:S.RevealAllBlips,2:S.DestroyAllEnemies},missionParameters:{1:{parameter:P.MaxBlips,value:5},2:{parameter:P.MaxMechsOnBlip,value:6}},missionConstraints:{1:E.NoConstraints}},Sabotage:{longName:"Sabotage",missionDescription:"Destroy target objects",missionSetupSteps:{1:k.DiceOutBlips,2:k.PlaceBlipsOnMap,3:k.PlacePlayerStart},missionGoals:{1:S.DestroyObjects,2:S.RetreatToShip},missionParameters:{1:{parameter:P.MaxBlips,value:5},2:{parameter:P.MaxMechsOnBlip,value:3},3:{parameter:P.MinObjectsOnMap,value:1},4:{parameter:P.MaxObjectsOnMap,value:2}},missionConstraints:{1:E.ObjectsAreVisibleFromStart}},Duel:{longName:"Duel",missionDescription:"Destroy all enemies",missionSetupSteps:{1:k.PlaceBlipsOnMap,2:k.PlacePlayerStart},missionGoals:{1:S.DestroyAllEnemies,2:S.RevealAllBlips},missionParameters:{1:{parameter:P.MaxBlips,value:1},2:{parameter:P.MaxMechsOnBlip,value:4},3:{parameter:P.MinBlips,value:1},4:{parameter:P.MinMechsOnBlip,value:4},5:{parameter:P.ChanceOfActivatingBlipEveryRound,value:50}},missionConstraints:{1:E.NoConstraints}},Recon:{longName:"Recon",missionDescription:"Recon all blips",missionSetupSteps:{1:k.DiceOutBlips,2:k.PlaceBlipsOnMap,3:k.PlacePlayerStart},missionGoals:{1:S.RevealAllBlips,2:S.RetreatToShip},missionParameters:{1:{parameter:P.MaxBlips,value:3},2:{parameter:P.MaxMechsOnBlip,value:5}},missionConstraints:{1:E.PossibleMechClassesIncreased}},BountyHunter:{longName:"Bounty",missionDescription:"Destroy target mech",missionSetupSteps:{1:k.DiceOutBlips,2:k.PlaceBlipsOnMap,3:k.PlacePlayerStart},missionGoals:{1:S.DestroyTargetMech,2:S.RetreatToShip},missionParameters:{1:{parameter:P.MaxBlips,value:5},2:{parameter:P.MaxMechsOnBlip,value:4},3:{parameter:P.NumberOfTargetMechs,value:1}},missionConstraints:{1:E.NoConstraints}},Escort:{longName:"Escort Mission",missionDescription:"Escort objects to opposite corner",missionSetupSteps:{1:k.DiceOutBlips,2:k.PlaceBlipsOnMap,3:k.PlacePlayerStart,4:k.DiceOutEscortStartingPosition},missionGoals:{1:S.DefendObjects,2:S.RetreatToShip},missionParameters:{1:{parameter:P.MaxBlips,value:4},2:{parameter:P.MaxMechsOnBlip,value:3},3:{parameter:P.MaxEscortsOnMap,value:3},4:{parameter:P.DamagePerShotOnEscort,value:25}},missionConstraints:{1:E.EnemyMechsTargetEscortFirst}},Defense:{longName:"Defense Mission",missionDescription:"Defend object for a certain amount of time",missionSetupSteps:{1:k.DiceOutObjectNumber,2:k.PlaceObjectsOnMap,3:k.PlacePlayerStart},missionGoals:{1:S.DefendObjects,2:S.RetreatToShip},missionParameters:{1:{parameter:P.MaxObjectsOnMap,value:4},2:{parameter:P.MinObjectsOnMap,value:1},3:{parameter:P.DamagePerShotOnObject,value:25},4:{parameter:P.NumberOfRoundsToSurvive,value:10},5:{parameter:P.ChanceOfSpawningEnemyMech,value:50}},missionConstraints:{1:E.EnemyMechsTargetObjectsFirst,2:E.EnemyMechsAreAlwaysAggressive,3:E.ObjectsAreVisibleFromStart}},Capture:{longName:"Capture Object Mission",missionDescription:"Capture object for a certain amount of time",missionSetupSteps:{1:k.DiceOutObjectNumber,2:k.PlaceObjectsOnMap,3:k.PlacePlayerStart},missionGoals:{1:S.CaptureAllObjects,2:S.RetreatToShip},missionParameters:{1:{parameter:P.MaxObjectsOnMap,value:3},2:{parameter:P.MinObjectsOnMap,value:1},3:{parameter:P.DamagePerShotOnObject,value:25},4:{parameter:P.ChanceOfSpawningEnemyMech,value:33},5:{parameter:P.RoundsInRangeToCapture,value:3},6:{parameter:P.RangeToCapture,value:2}},missionConstraints:{1:E.EnemyMechsTargetObjectsFirst,2:E.EnemyMechsAreAlwaysAggressive,3:E.ObjectsAreVisibleFromStart}},DeliverData:{longName:"Deliver data chips through enemy territory",missionDescription:"Cross enemy territory and reach the opposing corner",missionSetupSteps:{1:k.DiceOutBlips,2:k.PlaceBlipsOnMap,3:k.PlacePlayerStart},missionGoals:{1:S.ReachCorner},missionParameters:{1:{parameter:P.MaxBlips,value:3},2:{parameter:P.MinBlips,value:1},3:{parameter:P.ChanceOfSpawningEnemyMech,value:25}},missionConstraints:{1:E.EnemyMechsAreAlwaysAggressive,2:E.PlayerMustSpawnInCorner,3:E.PossibleMechClassesIncreased}},Decimate:{longName:"Decimate enemy forces",missionDescription:"Strike on enemy blip and decimate all mechs found",missionSetupSteps:{1:k.DiceOutBlips,2:k.PlaceBlipsOnMap,3:k.PlacePlayerStart},missionGoals:{1:S.RevealAtLeastOneBlips,2:S.DestroyAllEnemies,3:S.RetreatToShip},missionParameters:{1:{parameter:P.MaxBlips,value:5},2:{parameter:P.MinBlips,value:3}},missionConstraints:{1:E.NoConstraints}}},B=(a(116),{1:{fullName:"Light",shortName:"L",baseDifficultyModifier:3,mechTier:1},2:{fullName:"Medium",shortName:"M",baseDifficultyModifier:9,mechTier:2},3:{fullName:"Heavy",shortName:"H",baseDifficultyModifier:14,mechTier:3},4:{fullName:"Assault",shortName:"A",baseDifficultyModifier:23,mechTier:4}}),j=(a(4114),{Wasp:{fullName:"Wasp",shortName:"Wasp",mechClass:B[1]},Jenner:{fullName:"Jenner",shortName:"Jenner",mechClass:B[1]},Panther:{fullName:"Panther",shortName:"Panther",mechClass:B[1]},Mercury:{fullName:"Mercury",shortName:"Mercury",mechClass:B[1]},Urban:{fullName:"Urban Mech",shortName:"Urban",mechClass:B[1]},Raven:{fullName:"Raven",shortName:"Raven",mechClass:B[1]},Sentinel:{fullName:"Sentinel",shortName:"Sentinel",mechClass:B[1]},Wolfshound:{fullName:"Wolfshound",shortName:"Wolfshound",mechClass:B[1]},Locust:{fullName:"Locust",shortName:"Locust",mechClass:B[1]},Commando:{fullName:"Commando",shortName:"Commando",mechClass:B[1]},Wolverine:{fullName:"Wolverine",shortName:"Wolverine",mechClass:B[2]},Hatchetman:{fullName:"Hatchetman",shortName:"Hatchetman",mechClass:B[2]},Hunchback:{fullName:"Hunchback",shortName:"Hunchback",mechClass:B[2]},Enforcer:{fullName:"Enforcer",shortName:"Enforcer",mechClass:B[2]},Centurion:{fullName:"Centurion",shortName:"Centurion",mechClass:B[2]},ShadowHawk:{fullName:"ShadowHawk",shortName:"ShadowHawk",mechClass:B[2]},Blackjack:{fullName:"Blackjack",shortName:"Blackjack",mechClass:B[2]},PhoenixHawk:{fullName:"PhoenixHawk",shortName:"PhoenixHawk",mechClass:B[2]},Griffin:{fullName:"Griffin",shortName:"Griffin",mechClass:B[2]},Orion:{fullName:"Orion",shortName:"Orion",mechClass:B[3]},Catapult:{fullName:"Catapult",shortName:"Catapult",mechClass:B[3]},Exterminator:{fullName:"Exterminator",shortName:"Exterminator",mechClass:B[3]},Warhammer:{fullName:"Warhammer",shortName:"Warhammer",mechClass:B[3]},Crusader:{fullName:"Crusader",shortName:"Crusader",mechClass:B[3]},Rifleman:{fullName:"Rifleman",shortName:"Rifleman",mechClass:B[3]},Grashopper:{fullName:"Grashopper",shortName:"Grashopper",mechClass:B[3]},BlackKnight:{fullName:"Black Knight",shortName:"BlackKnight",mechClass:B[3]},Thunderbolt:{fullName:"Thunderbolt",shortName:"Thunderbolt",mechClass:B[3]},Atlas:{fullName:"Atlas",shortName:"Atlas",mechClass:B[4]},KingCrab:{fullName:"KingCrab",shortName:"KingCrab",mechClass:B[4]},Banshee:{fullName:"Banshee",shortName:"Banshee",mechClass:B[4]},Highlander:{fullName:"Highlander",shortName:"Highlander",mechClass:B[4]},Awesome:{fullName:"Awesome",shortName:"Awesome",mechClass:B[4]},Battlemaster:{fullName:"Battlemaster",shortName:"Battlemaster",mechClass:B[4]},Victor:{fullName:"Victor",shortName:"Victor",mechClass:B[4]},Marauder2:{fullName:"MarauderII",shortName:"MarauderII",mechClass:B[4]}});function w(){this.mechTier=B[1],this.blipPosition=1,this.mechsInBlip=[],this.blipNumber=0,this.hasObject=!1,this.showAllObjectsFromStart=!1}function L(){this.position=0,this.mech=j.Jenner,this.target=0}function R(e,s){let a=G(e),t=X(e),n=F(e),r=x(e),i=[];s=T(e,s);let o=I(s),l=p(a);for(let m=1;m<=l;m++){let a=new w;a.blipNumber=m,a.blipPosition=p(9),a.mechTier=o[Math.floor(Math.random()*o.length)],a.mechsInBlip=_(a.mechTier,t,s,n),m<=r&&(a.hasObject=!0),a.showAllObjectsFromStart=A(e),i.push(a)}return i}function T(e,s){for(const[,a]of Object.entries(e.missionConstraints))a==E.PossibleMechClassesIncreased&&s++;return s>4&&(s=4),s}function A(e){for(const[,s]of Object.entries(e.missionConstraints))if(s==E.ObjectsAreVisibleFromStart)return!0;return!1}function F(e){for(const[,s]of Object.entries(e.missionParameters))if(s.parameter==P.NumberOfTargetMechs)return s.value;return 0}function x(e){let s=0,a=0,t=0;for(const[,n]of Object.entries(e.missionParameters))n.parameter==P.MinObjectsOnMap&&(s=n.value),n.parameter==P.MaxObjectsOnMap&&(a=n.value);return t=h(s,a),t}function X(e){let s=1,a=0,t=3;for(const[,n]of Object.entries(e.missionParameters))n.parameter==P.MaxMechsOnBlip&&(t=n.value),n.parameter==P.MinMechsOnBlip&&(a=n.value);return s=h(a,t),s}function G(e){let s=2;for(const[,a]of Object.entries(e.missionParameters))a.parameter==P.MaxBlips&&(s=p(a.value));return s}function I(e){let s=p(e),a=[];for(let t=0;t<s;t++){let s=p(e),t=B[s];a.includes(t)||a.push(t)}return a}function _(e,s,a,t){let n=[];const r=j;for(const[,l]of Object.entries(r))if(l.mechClass.mechTier<=e.mechTier){let e=new L;e.mech=l,e.position=p(6),n.push(e)}let i=[];for(const[,l]of Object.entries(r))if(l.mechClass.mechTier==a){let e=new L;e.mech=l,e.position=p(6),i.push(e)}let o=[];for(let l=0;l<s;l++)1!=p(2)?o.push(n[Math.floor(Math.random()*n.length)]):o.push(i[Math.floor(Math.random()*i.length)]);if(t>0&&o.length>0)for(const[,l]of o.entries())if(1==p(2)){l.target=1;break}return o}const H={key:0},K=["onClick"],W={key:0},V={key:0},Q={name:"BlipIntel",data(){return{chosenBlipNumber:null}},methods:{showBlip(e){this.chosenBlipNumber=e}}};var J=Object.assign(Q,{props:{chosenMission:D,highestPossibleMechClass:Number,missionNumber:Number},setup(e){const s=y(),a=e,n=(0,f.KR)(!1),i=Object.keys(B).find((e=>e==a.highestPossibleMechClass)),l=B[i],m=(0,r.EW)((()=>R(a.chosenMission,l.mechTier))),c=(0,r.EW)((()=>{let e=0;return m.value.forEach((s=>{s.mechsInBlip.forEach((s=>{e+=s.mech.mechClass.baseDifficultyModifier}))})),s.add(a.missionNumber,e),e}));return(e,s)=>((0,r.uX)(),(0,r.CE)(r.FK,null,[(0,r.Lk)("button",{onClick:s[0]||(s[0]=e=>n.value=!0)},"Show Intel"),(0,r.bo)((0,r.Lk)("div",null,[(0,r.Lk)("p",null,"Max Mech Class ("+(0,o.v_)((0,f.R1)(l).fullName)+")",1),(0,r.Lk)("p",null,"Added Difficulty: "+(0,o.v_)(c.value),1),((0,r.uX)(!0),(0,r.CE)(r.FK,null,(0,r.pI)(m.value,(s=>((0,r.uX)(),(0,r.CE)("div",{class:"blip",key:s},[1==s.hasObject&&1==s.showAllObjectsFromStart?((0,r.uX)(),(0,r.CE)("p",H," OBJECT ")):(0,r.Q3)("",!0),(0,r.Lk)("button",{onClick:a=>e.showBlip(s.blipNumber)}," Show Blip #"+(0,o.v_)(s.blipNumber),9,K),(0,r.bF)(O,{positionNumber:s.blipPosition},null,8,["positionNumber"]),(0,r.bo)((0,r.Lk)("div",null,[(0,r.Lk)("p",null,"#"+(0,o.v_)(s.blipNumber),1),1==s.hasObject&&0==s.showAllObjectsFromStart?((0,r.uX)(),(0,r.CE)("p",W," OBJECT ")):(0,r.Q3)("",!0),((0,r.uX)(!0),(0,r.CE)(r.FK,null,(0,r.pI)(s.mechsInBlip,(e=>((0,r.uX)(),(0,r.CE)("div",{class:"mech_blip",key:e},[(0,r.Lk)("p",null,(0,o.v_)(e.mech.fullName),1),(0,r.Lk)("p",null,(0,o.v_)(e.mech.mechClass.fullName),1),(0,r.Lk)("p",null,(0,o.v_)(e.position),1),1==e.target?((0,r.uX)(),(0,r.CE)("p",V,"TARGET")):(0,r.Q3)("",!0)])))),128))],512),[[t.aG,e.chosenBlipNumber==s.blipNumber]])])))),128))],512),[[t.aG,n.value]])],64))}});const U=J;var z=U;const $={key:0};var Y={__name:"MissionType",props:{chosenMission:D},setup(e){const s=e,a=(0,r.EW)((()=>s.chosenMission)),t=(0,f.KR)(!1);return(e,s)=>((0,r.uX)(),(0,r.CE)(r.FK,null,[(0,r.Lk)("p",null,(0,o.v_)(a.value.longName),1),(0,r.Lk)("button",{onClick:s[0]||(s[0]=e=>t.value=!0)},"Show Description"),t.value?((0,r.uX)(),(0,r.CE)("div",$,[(0,r.Lk)("p",null,"Description: "+(0,o.v_)(a.value.missionDescription),1),s[1]||(s[1]=(0,r.Lk)("p",null,"Setup:",-1)),((0,r.uX)(!0),(0,r.CE)(r.FK,null,(0,r.pI)(a.value.missionSetupSteps,((e,s)=>((0,r.uX)(),(0,r.CE)("p",{key:e},(0,o.v_)(s)+": "+(0,o.v_)(e.description),1)))),128)),s[2]||(s[2]=(0,r.Lk)("p",null,"Goals:",-1)),((0,r.uX)(!0),(0,r.CE)(r.FK,null,(0,r.pI)(a.value.missionGoals,((e,s)=>((0,r.uX)(),(0,r.CE)("p",{key:e},(0,o.v_)(s)+": "+(0,o.v_)(e.description),1)))),128)),s[3]||(s[3]=(0,r.Lk)("p",null,"Parameters:",-1)),((0,r.uX)(!0),(0,r.CE)(r.FK,null,(0,r.pI)(a.value.missionParameters,((e,s)=>((0,r.uX)(),(0,r.CE)("p",{key:e},(0,o.v_)(s)+": "+(0,o.v_)(e.parameter.description)+" "+(0,o.v_)(e.value),1)))),128)),s[4]||(s[4]=(0,r.Lk)("p",null,"Constraints:",-1)),((0,r.uX)(!0),(0,r.CE)(r.FK,null,(0,r.pI)(a.value.missionConstraints,((e,s)=>((0,r.uX)(),(0,r.CE)("p",{key:e},(0,o.v_)(s)+": "+(0,o.v_)(e.description),1)))),128))])):(0,r.Q3)("",!0)],64))}};const Z=Y;var q=Z;const ee={class:"mission"},se={name:"MissionSingle",components:{BlipIntel:z,MissionType:q}};var ae=Object.assign(se,{props:{missionNumber:Number,highestPossibleMechClass:Number},setup(e){const s=e,a=y(),t=(0,r.EW)((()=>{let e=Object.keys(D);return D[e[Math.floor(Math.random()*e.length)]]})),n=(0,r.EW)((()=>v.map[Math.floor(Math.random()*v.map.length)].mapName)),i=(0,r.EW)((()=>1==p(3)?b.mapParameter[0]:b.mapParameter[Math.floor(Math.random()*b.mapParameter.length)])),l=(0,r.EW)((()=>{let e=0;return e+=i.value.parameterDifficulty,e+=a.get(s.missionNumber),e<=5&&(e=p(20)+10),e}));return(e,a)=>((0,r.uX)(),(0,r.CE)("div",ee,[(0,r.Lk)("p",null,"Mission # "+(0,o.v_)(s.missionNumber),1),(0,r.Lk)("p",null,"Mission Map: "+(0,o.v_)(n.value),1),(0,r.Lk)("p",null,"Map Parameter: "+(0,o.v_)(i.value.parameterName),1),(0,r.Lk)("p",null,[a[0]||(a[0]=(0,r.eW)("Mission Type: ")),(0,r.bF)(q,{chosenMission:t.value},null,8,["chosenMission"])]),(0,r.Lk)("p",null,"Difficulty: "+(0,o.v_)(l.value),1),(0,r.Lk)("p",null,[a[1]||(a[1]=(0,r.eW)("Player Start:")),(0,r.bF)(O,{positionNumber:(0,f.R1)(p)(9)},null,8,["positionNumber"])]),(0,r.bF)(z,{highestPossibleMechClass:s.highestPossibleMechClass,missionNumber:s.missionNumber,chosenMission:t.value},null,8,["highestPossibleMechClass","missionNumber","chosenMission"])]))}});const te=ae;var ne=te;const re=["value"],ie={name:"MechClassSelect",data(){return{MechClasses:B}}};var oe=Object.assign(ie,{setup(e){const s=(0,f.KR)("");return(e,a)=>(0,r.bo)(((0,r.uX)(),(0,r.CE)("select",{class:"mech_select","onUpdate:modelValue":a[0]||(a[0]=e=>s.value=e),onChange:a[1]||(a[1]=a=>e.$emit("emitSelectedMissionClass",s.value))},[a[2]||(a[2]=(0,r.Lk)("option",{disabled:"",value:""},"Please choose highest possible Mech class",-1)),((0,r.uX)(!0),(0,r.CE)(r.FK,null,(0,r.pI)((0,f.R1)(B),(e=>((0,r.uX)(),(0,r.CE)("option",{key:e.mechTier,value:e.mechTier},(0,o.v_)(e.fullName),9,re)))),128))],544)),[[t.u1,s.value]])}});const le=oe;var me=le;const ce=["value"];function ue(e,s,a,t,n,i){return(0,r.uX)(),(0,r.CE)(r.FK,null,[s[1]||(s[1]=(0,r.Lk)("h2",null,"All possible Mechs",-1)),(0,r.Lk)("table",null,[(0,r.Lk)("tbody",null,[s[0]||(s[0]=(0,r.Lk)("tr",null,[(0,r.Lk)("th",null,"Shortname"),(0,r.Lk)("th",null,"FullName"),(0,r.Lk)("th",null,"MechClass")],-1)),((0,r.uX)(!0),(0,r.CE)(r.FK,null,(0,r.pI)(n.Mechs,(e=>((0,r.uX)(),(0,r.CE)("tr",{key:e.shortName,value:e.mechTier},[(0,r.Lk)("td",null,(0,o.v_)(e.shortName),1),(0,r.Lk)("td",null,(0,o.v_)(e.fullName),1),(0,r.Lk)("td",null,(0,o.v_)(e.mechClass.fullName),1)],8,ce)))),128))])])],64)}var pe={name:"OverviewMechs",data(){return{Mechs:j}}},he=a(6262);const fe=(0,he.A)(pe,[["render",ue]]);var ve=fe;function be(e,s,a,t,n,i){return(0,r.uX)(),(0,r.CE)(r.FK,null,[s[1]||(s[1]=(0,r.Lk)("h2",null,"All possible Missions",-1)),(0,r.Lk)("table",null,[(0,r.Lk)("tbody",null,[s[0]||(s[0]=(0,r.Lk)("tr",null,[(0,r.Lk)("th",null,"Shortname"),(0,r.Lk)("th",null,"Longname"),(0,r.Lk)("th",null,"Description")],-1)),((0,r.uX)(!0),(0,r.CE)(r.FK,null,(0,r.pI)(n.Missions,((e,s)=>((0,r.uX)(),(0,r.CE)("tr",{key:e},[(0,r.Lk)("td",null,(0,o.v_)(s),1),(0,r.Lk)("td",null,(0,o.v_)(e.longName),1),(0,r.Lk)("td",null,(0,o.v_)(e.missionDescription),1)])))),128))])])],64)}var Me={name:"OverviewMissions",data(){return{Missions:D}}};const de=(0,he.A)(Me,[["render",be]]);var Ce=de;const Ne=(0,f.KR)(0),Oe=(0,f.KR)(1);var ge={name:"MissionsGenerator",components:{MissionSingle:ne,MechClassSelect:me,OverviewMechs:ve,OverviewMissions:Ce},data(){return{missionCount:0,componentKeyForReRendering:0,selectedMissionClass:Oe,showPageNumber:0}},methods:{generateMissions:function(){this.missionCount=p(15),Ne.value+=1,this.componentKeyForReRendering=Ne.value},onSelectMissionClass(e){this.selectedMissionClass=e,this.missionCount=p(15),Ne.value+=1,this.componentKeyForReRendering=Ne.value}}};const ye=(0,he.A)(ge,[["render",u]]);var Se=ye,ke={name:"App",components:{MissionsGenerator:Se}};const Pe=(0,he.A)(ke,[["render",i]]);var Ee=Pe;const De=(0,n.Ey)(),Be=(0,t.Ef)(Ee);Be.use(De),Be.mount("#app")}},s={};function a(t){var n=s[t];if(void 0!==n)return n.exports;var r=s[t]={exports:{}};return e[t].call(r.exports,r,r.exports,a),r.exports}a.m=e,function(){var e=[];a.O=function(s,t,n,r){if(!t){var i=1/0;for(c=0;c<e.length;c++){t=e[c][0],n=e[c][1],r=e[c][2];for(var o=!0,l=0;l<t.length;l++)(!1&r||i>=r)&&Object.keys(a.O).every((function(e){return a.O[e](t[l])}))?t.splice(l--,1):(o=!1,r<i&&(i=r));if(o){e.splice(c--,1);var m=n();void 0!==m&&(s=m)}}return s}r=r||0;for(var c=e.length;c>0&&e[c-1][2]>r;c--)e[c]=e[c-1];e[c]=[t,n,r]}}(),function(){a.d=function(e,s){for(var t in s)a.o(s,t)&&!a.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:s[t]})}}(),function(){a.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){a.o=function(e,s){return Object.prototype.hasOwnProperty.call(e,s)}}(),function(){var e={524:0};a.O.j=function(s){return 0===e[s]};var s=function(s,t){var n,r,i=t[0],o=t[1],l=t[2],m=0;if(i.some((function(s){return 0!==e[s]}))){for(n in o)a.o(o,n)&&(a.m[n]=o[n]);if(l)var c=l(a)}for(s&&s(t);m<i.length;m++)r=i[m],a.o(e,r)&&e[r]&&e[r][0](),e[r]=0;return a.O(c)},t=self["webpackChunkmg"]=self["webpackChunkmg"]||[];t.forEach(s.bind(null,0)),t.push=s.bind(null,t.push.bind(t))}();var t=a.O(void 0,[504],(function(){return a(9297)}));t=a.O(t)})();
//# sourceMappingURL=app.17bbeb77.js.map